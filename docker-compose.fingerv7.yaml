# docker-compose.yaml específico para instâncias fingerv7 no EasyPanel
# Este arquivo NÃO inclui o orquestrador - apenas a instância fingerv7
# Use este arquivo quando o orquestrador já estiver rodando em outro projeto
services:
  gluetun:
    image: qmcgaw/gluetun:latest
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    volumes:
      - gluetun_data:/gluetun
    environment:
      - VPN_SERVICE_PROVIDER=${VPN_SERVICE_PROVIDER:-protonvpn}
      - VPN_TYPE=${VPN_TYPE:-wireguard}
      - SERVER_COUNTRIES=${SERVER_COUNTRIES:-Brazil}
      - WIREGUARD_PRIVATE_KEY=${WIREGUARD_PRIVATE_KEY}
      - OPENVPN_USER=${VPN_USER}
      - OPENVPN_PASSWORD=${VPN_PASSWORD}
      - TZ=${TZ:-America/Sao_Paulo}
    healthcheck:
      test: ["CMD", "/gluetun-entrypoint", "healthcheck"]
      interval: 20s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  finger_app:
    # BUILD LOCAL: EasyPanel irá construir a imagem a partir do Dockerfile na raiz
    build:
      context: .
      dockerfile: Dockerfilegit
    network_mode: "service:gluetun"
    depends_on:
      gluetun:
        condition: service_healthy
    volumes:
      - app_segments:/app/segments
    environment:
      # --- Variáveis da Aplicação (Definidas no EasyPanel) ---
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - DB_TABLE_NAME=${DB_TABLE_NAME:-music_log}
      - SERVER_ID=${SERVER_ID:-1}
      - TOTAL_SERVERS=${TOTAL_SERVERS:-1}
      - DISTRIBUTE_LOAD=${DISTRIBUTE_LOAD:-False}
      - ENABLE_ROTATION=${ENABLE_ROTATION:-False}
      - ROTATION_HOURS=${ROTATION_HOURS:-24}
      - IDENTIFICATION_DURATION=${IDENTIFICATION_DURATION:-15}
      - DUPLICATE_PREVENTION_WINDOW_SECONDS=${DUPLICATE_PREVENTION_WINDOW_SECONDS:-900}
      - SEGMENTS_DIR=/app/segments
      - PYTHONUNBUFFERED=1
      - TZ=${TZ:-America/Sao_Paulo}
      # --- Redis (Heartbeats em tempo real) ---
      - REDIS_URL=${REDIS_URL}
      - REDIS_CHANNEL=${REDIS_CHANNEL:-smf:server_heartbeats}
      - REDIS_KEY_PREFIX=${REDIS_KEY_PREFIX:-smf:server}
      - REDIS_HEARTBEAT_TTL_SECS=${REDIS_HEARTBEAT_TTL_SECS:-60}
      # --- Orquestrador Central (Nova API) ---
      - USE_ORCHESTRATOR=${USE_ORCHESTRATOR:-True}
      - ORCHESTRATOR_URL=${ORCHESTRATOR_URL}
      - INSTANCE_ID=${INSTANCE_ID}
      - WORKER_INSTANCE_ID=${INSTANCE_ID}
      - WORKER_TYPE=fingerv7
      - WORKER_CAPACITY=${WORKER_CAPACITY:-5}
      - WORKER_REGION=${WORKER_REGION:-brasil}
      - HEARTBEAT_INTERVAL=${HEARTBEAT_INTERVAL:-30}
      - MAX_CONCURRENT_STREAMS=${MAX_CONCURRENT_STREAMS:-5}
      - STREAM_TIMEOUT=${STREAM_TIMEOUT:-300}
      - RETRY_ATTEMPTS=${RETRY_ATTEMPTS:-3}
    restart: unless-stopped

volumes:
  gluetun_data:
  app_segments: