# =============================================================================
# DOCKERFILE OTIMIZADO PARA EASYPANEL - ORCHESTRATOR COM POSTGRES E REDIS
# =============================================================================

FROM python:3.11-slim

# Instalar dependências do sistema necessárias
RUN apt-get update && apt-get install -y \
    postgresql \
    postgresql-client \
    postgresql-contrib \
    redis-server \
    curl \
    netcat-openbsd \
    sudo \
    procps \
    locales \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Configurar locale
RUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && \
    locale-gen
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US:en
ENV LC_ALL en_US.UTF-8

# Configurar diretório da aplicação
WORKDIR /app

# Copiar requirements e instalar dependências Python
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copiar código da aplicação
COPY . .

# Criar diretórios necessários com permissões corretas
RUN mkdir -p /app/logs /app/data /var/lib/postgresql/data /var/run/postgresql \
    && chown -R postgres:postgres /var/lib/postgresql/ /var/run/postgresql/ /app/logs \
    && chmod 755 /var/run/postgresql \
    && chmod 777 /app/logs /app/data

# Configurar PostgreSQL
USER postgres
RUN /usr/lib/postgresql/*/bin/initdb -D /var/lib/postgresql/data --encoding=UTF-8 --locale=C \
    && echo "host all all 0.0.0.0/0 md5" >> /var/lib/postgresql/data/pg_hba.conf \
    && echo "listen_addresses='*'" >> /var/lib/postgresql/data/postgresql.conf \
    && echo "port = 5432" >> /var/lib/postgresql/data/postgresql.conf \
    && echo "max_connections = 100" >> /var/lib/postgresql/data/postgresql.conf \
    && echo "shared_buffers = 128MB" >> /var/lib/postgresql/data/postgresql.conf

# Voltar para root
USER root

# Tornar scripts executáveis
RUN chmod +x /app/app/start-orchestrator.sh

# Criar script de validação de ambiente
RUN echo '#!/bin/bash\n\
echo "Validating environment variables..."\n\
missing_vars=""\n\
for var in DB_HOST DB_PORT DB_NAME DB_USER DB_PASSWORD REDIS_HOST REDIS_PORT; do\n\
  if [ -z "${!var}" ]; then missing_vars="$missing_vars $var"; fi\n\
done\n\
if [ -n "$missing_vars" ]; then\n\
  echo "ERROR: Missing required environment variables:$missing_vars"\n\
  echo "Please set all required variables before starting the container"\n\
  exit 1\n\
fi\n\
echo "Environment validation passed"' > /app/validate-env.sh \
    && chmod +x /app/validate-env.sh

# Expor porta da aplicação
EXPOSE 8000

# Variáveis de ambiente com valores padrão
ENV DB_HOST=localhost \
    DB_PORT=5432 \
    DB_NAME=orchestrator \
    DB_USER=orchestrator_user \
    DB_PASSWORD=orchestrator_pass \
    REDIS_HOST=localhost \
    REDIS_PORT=6379 \
    POSTGRES_STARTUP_TIMEOUT=60 \
    REDIS_STARTUP_TIMEOUT=30 \
    APP_STARTUP_TIMEOUT=120 \
    LOG_LEVEL=INFO \
    PYTHONUNBUFFERED=1 \
    PYTHONPATH=/app/app:/app

# Health check otimizado
HEALTHCHECK --interval=30s --timeout=10s --start-period=120s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Comando de inicialização
CMD ["/bin/bash", "-c", "/app/validate-env.sh && /app/app/start-orchestrator.sh"]