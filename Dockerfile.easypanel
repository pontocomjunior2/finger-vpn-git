# =============================================================================
# DOCKERFILE SIMPLIFICADO PARA EASYPANEL
# =============================================================================

FROM python:3.11-slim

# Instalar dependências do sistema
RUN apt-get update && apt-get install -y \
    postgresql-15 \
    postgresql-client-15 \
    postgresql-contrib-15 \
    redis-server \
    supervisor \
    curl \
    netcat-openbsd \
    && rm -rf /var/lib/apt/lists/*

# Configurar diretório da aplicação
WORKDIR /app

# Copiar requirements e instalar dependências Python
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copiar código da aplicação
COPY . .

# Criar diretórios necessários
RUN mkdir -p /app/logs /app/data /var/log/supervisor /var/lib/postgresql/15/main /var/run/postgresql

# Configurar PostgreSQL
RUN chown -R postgres:postgres /var/lib/postgresql/ /var/run/postgresql/
RUN chmod 755 /var/run/postgresql

# Inicializar banco PostgreSQL
USER postgres
RUN /usr/lib/postgresql/15/bin/initdb -D /var/lib/postgresql/15/main --encoding=UTF-8 --locale=C
RUN echo "host all all 0.0.0.0/0 md5" >> /var/lib/postgresql/15/main/pg_hba.conf
RUN echo "listen_addresses='*'" >> /var/lib/postgresql/15/main/postgresql.conf
RUN echo "port = 5432" >> /var/lib/postgresql/15/main/postgresql.conf

USER root

# Copiar script de inicialização
COPY scripts/start-services.sh /app/start-services.sh
RUN chmod +x /app/start-services.sh

# Expor porta da aplicação
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
  CMD curl -f http://localhost:8000/health || exit 1

# Comando de inicialização
CMD ["/app/start-services.sh"]