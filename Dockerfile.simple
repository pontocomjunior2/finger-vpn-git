FROM python:3.11-slim

RUN apt-get update && apt-get install -y \
    postgresql \
    postgresql-client \
    redis-server \
    curl \
    netcat-openbsd \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

COPY . .

RUN mkdir -p /app/logs /app/data /var/lib/postgresql/data /var/run/postgresql
RUN chown -R postgres:postgres /var/lib/postgresql/ /var/run/postgresql/

USER postgres
RUN /usr/lib/postgresql/*/bin/initdb -D /var/lib/postgresql/data --encoding=UTF-8 --locale=C
RUN echo "host all all 0.0.0.0/0 md5" >> /var/lib/postgresql/data/pg_hba.conf
RUN echo "listen_addresses='*'" >> /var/lib/postgresql/data/postgresql.conf

USER root

RUN echo '#!/bin/bash' > /app/start.sh && \
    echo 'set -e' >> /app/start.sh && \
    echo 'su - postgres -c "/usr/lib/postgresql/*/bin/pg_ctl -D /var/lib/postgresql/data -l /tmp/pg.log start"' >> /app/start.sh && \
    echo 'until pg_isready -h localhost -p 5432; do sleep 1; done' >> /app/start.sh && \
    echo 'su - postgres -c "psql -c \"CREATE USER orchestrator_user WITH SUPERUSER PASSWORD '\''${DB_PASSWORD:-orchestrator_pass}'\'';\""' >> /app/start.sh && \
    echo 'su - postgres -c "createdb -O orchestrator_user orchestrator" || true' >> /app/start.sh && \
    echo 'redis-server --daemonize yes --bind 0.0.0.0 --port 6379' >> /app/start.sh && \
    echo 'until redis-cli ping; do sleep 1; done' >> /app/start.sh && \
    echo 'exec python -m uvicorn app.main_orchestrator:app --host 0.0.0.0 --port 8000' >> /app/start.sh && \
    chmod +x /app/start.sh

EXPOSE 8000

HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
  CMD curl -f http://localhost:8000/health || exit 1

CMD ["/app/start.sh"]